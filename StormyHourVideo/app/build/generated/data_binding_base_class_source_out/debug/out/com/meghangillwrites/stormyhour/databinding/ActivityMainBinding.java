// Generated by data binding compiler. Do not edit!
package com.meghangillwrites.stormyhour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.meghangillwrites.stormyhour.R;
import com.meghangillwrites.stormyhour.weather.Hour;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final TextView accuweatherAttribution;

  @NonNull
  public final RecyclerView hourlyListItems;

  @NonNull
  public final TextView locationLabel;

  @NonNull
  public final TextView mainPrecipChanceValue;

  @NonNull
  public final ImageView mainPrecipImage;

  @NonNull
  public final TextView mainRealFealTempLabel;

  @NonNull
  public final TextView mainRealFealTempValue;

  @NonNull
  public final ImageView mainRealFeelTempDegree;

  @NonNull
  public final ImageView mainTempDegree;

  @NonNull
  public final TextView mainTemperature;

  @NonNull
  public final TextView mainTime;

  @NonNull
  public final ImageView mainWeatherIcon;

  @Bindable
  protected Hour mHour;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView accuweatherAttribution, RecyclerView hourlyListItems, TextView locationLabel,
      TextView mainPrecipChanceValue, ImageView mainPrecipImage, TextView mainRealFealTempLabel,
      TextView mainRealFealTempValue, ImageView mainRealFeelTempDegree, ImageView mainTempDegree,
      TextView mainTemperature, TextView mainTime, ImageView mainWeatherIcon) {
    super(_bindingComponent, _root, _localFieldCount);
    this.accuweatherAttribution = accuweatherAttribution;
    this.hourlyListItems = hourlyListItems;
    this.locationLabel = locationLabel;
    this.mainPrecipChanceValue = mainPrecipChanceValue;
    this.mainPrecipImage = mainPrecipImage;
    this.mainRealFealTempLabel = mainRealFealTempLabel;
    this.mainRealFealTempValue = mainRealFealTempValue;
    this.mainRealFeelTempDegree = mainRealFeelTempDegree;
    this.mainTempDegree = mainTempDegree;
    this.mainTemperature = mainTemperature;
    this.mainTime = mainTime;
    this.mainWeatherIcon = mainWeatherIcon;
  }

  public abstract void setHour(@Nullable Hour hour);

  @Nullable
  public Hour getHour() {
    return mHour;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
